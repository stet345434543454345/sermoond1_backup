[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Heat bed for probing
    M104 S120
    M190 S60
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    SCRUB
    # If you are generating a new bed mesh:
    BED_MESH_CALIBRATE ADAPTIVE=1
    ## NOTE:    The adaptive meshing feature requires exclude_object     ##
    ##      and may require 'Label Objects' to be enabled in the slicer  ##
    ##           To mesh without it just use BED_MESH_CALIBRATE          ##

    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default

    # Move the nozzle near the bed
    #G1 Z5 F3000
    #Smart_Park
    #IF SCRUB
    G0 Z10
    G0 X-4.5 Y0 F4000
    # Set and wait for nozzle to reach printing temperature    
    M140 S{BED_TEMP} ; set final bed temp
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp
    M190 S{BED_TEMP}; wait for bed temp to stabilize
    M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize
    PURGE
    LINE_PURGE
    # Start printing!

[gcode_macro END_PRINT]
gcode:
    G92 E0
    G1 E-2 F2000
    M140 S0 ; turn off heatbed
    M104 S0 ; turn off temperature
    M107 ; turn off fan
    G91
    G0 Z10 F1500
    G90
    G1 X10 Y10 F3000 ; move print head out of the way
    M84 X Y E ; disable motor
    

[gcode_macro SCRUB]
gcode:
    # Scrub nozzle on a1 mini wiper pad
    G90
    G0 Z5
    G0 Y8 F4000
    G0 X-4.5 F4000
    G0 Z1.2 
    G0 Y45 F15000
    G0 Y12 F15000
    G0 Y45 F15000
    G0 Y14 F15000
    G0 Y45 F15000
    G0 Y18 F15000
    G0 Y45 F15000
    G0 Y20 F15000
    G0 Z10
    G0 X10 F6000

[gcode_macro PURGE]
gcode:
    G0 Z5
    G0 X-4.5 Y0 F4000
    G0 Z1.2
    M83                   # Put the extruder into relative mode
    G92 E0.0              # Reset the extruder so that it thinks it is at position zero
    G1 E50 F350          # Move the extruder forward 50mm at a speed of 350mm/minute
    G1 E-2 F350
    G92 E0.0              # Reset the extruder again
    M82                   # Put the extruder back into absolute mode.
    G4 P10000
    G90
    G0 Y45 F15000
    G0 Y8 F15000
    G0 Y45 F15000
    G0 Y12 F15000
    G0 Y45 F15000
    G0 Y14 F15000
    G0 Y45 F15000
    G0 Y18 F15000
    G0 Y45 F15000
    G0 Y20 F15000
    G0 Z10
    G0 X10 F6000
    

[gcode_macro FILAMENT_LOAD]
gcode:
   G28
   G0 X0 Y0 Z20
   M109 S220
   M83                   # Put the extruder into relative mode
   G92 E0.0              # Reset the extruder so that it thinks it is at position zero
   G1 E50 F350          # Move the extruder forward 50mm at a speed of 350mm/minute
   G92 E0.0              # Reset the extruder again
   M82                   # Put the extruder back into absolute mode.
   M190 S30

[gcode_macro FILAMENT_UNLOAD]
gcode:
   G28
   G0 X0 Y0 Z20
   M109 S220
   M83                   # Put the extruder into relative mode
   G92 E0.0              # Reset the extruder so that it thinks it is at position zero
   G1 E10 F350          # Move the extruder FWD 50mm at a speed of 350mm/minute
   G1 E-50 F350          # Move the extruder BACK 50mm at a speed of 350mm/minute
   G92 E0.0              # Reset the extruder again
   M82                   # Put the extruder back into absolute mode.
   M190 S30

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x %}
        {% if x_min < 0 %}
            {% set x_min = 0 %}
        {% endif %}
    
        {% set y_min = printer.toolhead.axis_minimum.y %}
        {% if y_min < 0 %}
            {% set y_min = 0 %}
        {% endif %}
    
        {% set x_min = x_min + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = y_min + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
    

######################################################################
## Filament Change ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, simply resume the print.
[gcode_macro M600]
########### Gcode ############
gcode:
   {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
   {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
   {% set Z = params.Z|default(10)|int %}
   {% set E = params.E|default(-20)|int %}
   {% set tool = params.tool|default(0)|int %}
   PAUSE
   G91
   G1 E-5 F4000
   G1 Z{Z}
   G90
   G1 X{X} Y{Y} F3000 ;park position
   G0 E10 F500 ;extrude filament to get better blob on end
   G0 E{E} F600 ;retract additional filament to move out of melt zone
   G92 E0